{
	"info": {
		"_postman_id": "b5f335ef-85eb-4679-9873-55c5b13bfc7c",
		"name": "Pet Store",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "PetScenarios",
			"item": [
				{
					"name": "Add a new pet to the store",
					"item": [
						{
							"name": "Positive Scenarios",
							"item": [
								{
									"name": "1. Valid Input",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "445c8fc9-1300-4b50-a862-426e465eff47",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Response time is less than 500ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(500);",
													"});",
													"",
													"pm.test(\"Status is available\", function () {",
													"    var jsonData = pm.response.json();",
													"    //console.log(jsonData.id, jsonData.status)",
													"    pm.expect(jsonData.status).to.eql(\"available\");",
													"});",
													"",
													"pm.test(\"Verify the response\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.collectionVariables.set(\"Pet1Name\", jsonData.name );",
													"    pm.expect(jsonData.name).to.eql(\"timtam\");",
													"    pm.expect(jsonData.id).to.not.eql(null);",
													"    pm.collectionVariables.set(\"Pet1Id\", jsonData.id );",
													"    pm.expect(jsonData.category.id).to.eql(11);",
													"    pm.expect(jsonData.category.name).to.eql(\"Fish\");",
													"    pm.expect(jsonData.tags).to.not.eql([]);",
													"});",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2b8e27c9-9dec-4322-8ec1-d808d502999d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "read:pets write:pets",
												"authUrl": "https://petstore.swagger.io/oauth/authorize",
												"grant_type": "implicit"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"timtam\",\n  \"photoUrls\": [],\n  \"category\": {\n    \"id\": \"011\",\n    \"name\": \"Fish\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"100\",\n      \"name\": \"Freshwater\"\n    }\n\n  ],\n  \"status\": \"available\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/pet"
									},
									"response": []
								},
								{
									"name": "3. Optional fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "445c8fc9-1300-4b50-a862-426e465eff47",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Response time is less than 500ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(500);",
													"});",
													"",
													"pm.test(\"Status is sold\", function () {",
													"    var jsonData = pm.response.json();",
													"    //console.log(jsonData.id, jsonData.status)",
													"    pm.expect(jsonData.status).to.eql(\"sold\");",
													"});",
													"",
													"pm.test(\"Verify the response\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.collectionVariables.set(\"Pet3Name\", jsonData.name );",
													"    pm.expect(jsonData.name).to.eql(\"husky husky :)\");",
													"    pm.expect(jsonData.id).to.not.eql(null);",
													"    pm.collectionVariables.set(\"Pet3Id\", jsonData.id );",
													"    pm.expect(jsonData.category.id).to.eql(10);",
													"    pm.expect(jsonData.category.name).to.eql(\"Dogs\");",
													"    pm.expect(jsonData.photoUrls).to.not.eql([]);",
													"    pm.expect(jsonData.tags).to.not.eql([]);",
													"});",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d2f3a8bb-b6e2-401f-9db0-a4c5cd6788bc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "read:pets write:pets",
												"authUrl": "https://petstore.swagger.io/oauth/authorize",
												"grant_type": "implicit"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"husky husky :)\",\n  \"photoUrls\": [\n    \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.thedrakecenter.com%2Fservices%2Fdogs%2Fbreeds%2Fsiberian-husky&psig=AOvVaw3P_M_6Jp_vPZeJgQaJh36h&ust=1727587113846000&source=images&cd=vfe&opi=89978449&ved=2ahUKEwiZzJfT8eSIAxWGcWwGHeiUOsEQjRx6BAgAEBg\",\n    \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fdogtime.com%2Fdog-breeds%2Fsiberian-husky&psig=AOvVaw1no6LFN2rV7q6jGZPzqYyQ&ust=1727587115898000&source=images&cd=vfe&opi=89978449&ved=2ahUKEwi96JTU8eSIAxURfWwGHfhPJv4QjRx6BAgAEBg\"\n  ],\n  \"category\": {\n    \"id\": \"010\",\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"100\",\n      \"name\": \"Siberian Husky\"\n    },\n    {\n      \"id\": \"101\",\n      \"name\": \"high-energy dogs\"\n    },\n    {\n      \"id\": \"102\",\n      \"name\": \"more outdoor time dogs\"\n    }\n\n  ],\n  \"status\": \"sold\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/pet"
									},
									"response": []
								},
								{
									"name": "2. Required fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "445c8fc9-1300-4b50-a862-426e465eff47",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Response time is less than 500ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(500);",
													"});",
													"",
													"pm.test(\"Status is pending\", function () {",
													"    var jsonData = pm.response.json();",
													"    //console.log(jsonData.id, jsonData.status)",
													"    pm.expect(jsonData.status).to.eql(\"pending\");",
													"});",
													"",
													"pm.test(\"Verify the response\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.collectionVariables.set(\"Pet2Name\", jsonData.name );",
													"    pm.expect(jsonData.name).to.eql(\"Goldie\");",
													"    pm.expect(jsonData.id).to.not.eql(null);",
													"    pm.collectionVariables.set(\"Pet2Id\", jsonData.id );",
													"});",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "6fb86483-fbec-451f-9e79-bcb8046cfa88",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "read:pets write:pets",
												"authUrl": "https://petstore.swagger.io/oauth/authorize",
												"grant_type": "implicit"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Goldie\",\n  \"status\": \"pending\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/pet"
									},
									"response": []
								}
							],
							"id": "6429961a-c1f0-439b-b020-7cfe8f2a7454"
						},
						{
							"name": "Negative Scenarios",
							"item": [
								{
									"name": "1. Without required fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "445c8fc9-1300-4b50-a862-426e465eff47",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Error message mentions missing fields\", function () {",
													"    const jsonData = pm.response.json();",
													"    pm.expect(pm.response.text()).to.include(\"Invalid Input\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d61fd5a8-e9f9-488c-859e-7e6b863c1050",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "read:pets write:pets",
												"authUrl": "https://petstore.swagger.io/oauth/authorize",
												"grant_type": "implicit"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"category\": {\n    \"id\": \"010\",\n    \"name\": \"Dogs\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/pet"
									},
									"response": []
								},
								{
									"name": "3.Empty Json Body",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "445c8fc9-1300-4b50-a862-426e465eff47",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Error message mentions missing fields\", function () {",
													"    const jsonData = pm.response.json();",
													"    pm.expect(pm.response.text()).to.include(\"Invalid Input\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1483d463-b72c-47fb-b68a-1bf04287d8d5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "read:pets write:pets",
												"authUrl": "https://petstore.swagger.io/oauth/authorize",
												"grant_type": "implicit"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/pet"
									},
									"response": []
								},
								{
									"name": "2. Incorrect Status Enum",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "445c8fc9-1300-4b50-a862-426e465eff47",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Error message mentions missing fields\", function () {",
													"    const jsonData = pm.response.json();",
													"    pm.expect(pm.response.text()).to.include(\"Invalid Input\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e3146283-091c-490f-ba42-77bfb228a698",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "read:pets write:pets",
												"authUrl": "https://petstore.swagger.io/oauth/authorize",
												"grant_type": "implicit"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/pet"
									},
									"response": []
								},
								{
									"name": "4. Invalid datatypes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "445c8fc9-1300-4b50-a862-426e465eff47",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Error message mentions missing fields\", function () {",
													"    const jsonData = pm.response.json();",
													"    pm.expect(pm.response.text()).to.include(\"Invalid Input\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "83cc4ac6-6599-4c61-96c5-9a0d0d850ce1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "read:pets write:pets",
												"authUrl": "https://petstore.swagger.io/oauth/authorize",
												"grant_type": "implicit"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"invalidID\",\n  \"name\": 23,\n  \"status\": 123\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/pet"
									},
									"response": []
								},
								{
									"name": "5. Add pet with existing ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "445c8fc9-1300-4b50-a862-426e465eff47",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Error message mentions missing fields\", function () {",
													"    const jsonData = pm.response.json();",
													"    pm.expect(pm.response.text()).to.include(\"Invalid Input\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b92fd289-561d-47fb-8ba2-4d27bfd59f02",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "read:pets write:pets",
												"authUrl": "https://petstore.swagger.io/oauth/authorize",
												"grant_type": "implicit"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"{{Pet1Id}}\",\n  \"name\": \"Duke\",\n  \"status\": \"pending\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/pet"
									},
									"response": []
								}
							],
							"id": "7302d4a3-77db-4f2c-add7-5c68508d6698"
						}
					],
					"id": "d8c62482-e63c-4f5a-ae2d-02321683cc21",
					"description": "This folder contains test scenarios for the endpoint - Add a new pet to the store.\n\n**Positive Scenarios:**\n\n1. Create a pet with valid data (name, category, status, tags, photoUrls).\n    \n2. Create a pet with only the required fields (e.g., name, status).\n    \n3. Create a pet with all optional fields provided.\n    \n\n**Negative Scenarios:**\n\n1. Attempt to create a pet without any required fields.\n    \n2. Create a pet with an invalid status (e.g., a status not in the allowed set \\[“available”, “pending”, “sold”\\]).\n    \n3. Send a request with an empty JSON object.\n    \n4. Attempt to create a pet with invalid data types (e.g., numbers for name, strings for ID).\n    \n5. Attempt to create a pet with an existing pet ID"
				},
				{
					"name": "3. Update pet added in Test 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "445c8fc9-1300-4b50-a862-426e465eff47",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Status is available\", function () {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id, jsonData.status)",
									"    pm.expect(jsonData.status).to.eql(\"available\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0318be31-e139-4cd3-8c53-1635a5b60575",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": {
								"scope": "read:pets write:pets",
								"authUrl": "https://petstore.swagger.io/oauth/authorize",
								"grant_type": "implicit"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 0,\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"string\"\n  },\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/pet"
					},
					"response": []
				},
				{
					"name": "2. Add a new pet - II",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "445c8fc9-1300-4b50-a862-426e465eff47",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Status is available\", function () {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData.id, jsonData.status)",
									"    pm.expect(jsonData.status).to.eql(\"available\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "43e823fc-2b66-44ae-adf4-94c72ffd2e2c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": {
								"scope": "read:pets write:pets",
								"authUrl": "https://petstore.swagger.io/oauth/authorize",
								"grant_type": "implicit"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Fish\"\n  },\n  \"name\": \"blue fish - abc\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"Fresh water\"\n    }\n  ],\n  \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/pet"
					},
					"response": []
				},
				{
					"name": "4. Find pet by ID | find the pet created in Test 1",
					"id": "897285aa-0756-4e43-9abc-51eda02bc1ca",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": {
								"key": "api_key",
								"value": "{{apiKey}}",
								"in": "header"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": "{{baseUrl}}/pet/9223372036854775807"
					},
					"response": []
				}
			],
			"id": "99757401-b176-4252-9240-8730e8a25b09"
		}
	],
	"variable": [
		{
			"id": "7a105351-1227-4886-baa6-97c8d908fc68",
			"key": "Pet1Id",
			"value": ""
		},
		{
			"id": "06483255-bd91-4d6b-bdc0-64ddc99778cb",
			"key": "Pet1Name",
			"value": ""
		},
		{
			"id": "c3b7bb68-8724-4d96-95e3-b7548623e203",
			"key": "Pet2Name",
			"value": ""
		},
		{
			"id": "5fc158bb-4178-473d-b990-0912346b85fc",
			"key": "Pet2Id",
			"value": ""
		},
		{
			"id": "4f5b890a-71b3-4c32-bc2b-a53501b4958c",
			"key": "Pet3Name",
			"value": ""
		},
		{
			"id": "65a8b782-7056-48f1-88c2-9762923fcea5",
			"key": "Pet3Id",
			"value": ""
		}
	]
}